{"ast":null,"code":"var _jsxFileName = \"/Users/mrc/build-a-formik-form_starter/src/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useFormik } from 'formik';\n// TODO: import useFormik from formik library\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // TODO: add a const called formik assigned to useFormik()\n  const validate = values => {\n    const errors = {};\n    if (values.emailField === '') {\n      errors.emailField = \"field required\";\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.emailField)) {\n      errors.emailField = \"username should be an email\";\n    }\n    if (values.pswField === '') {\n      errors.pswField = \"field required\";\n    }\n    console.log(errors);\n    return errors;\n  };\n  const formik = useFormik({\n    initialValues: {\n      emailField: '',\n      pswField: ''\n    },\n    validate,\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"emailField\",\n        children: \"email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 47\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"emailField\",\n        id: \"emailField\",\n        onChange: formik.handleChange,\n        value: formik.values.emailField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this), formik.errors.emailField ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.emailField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 36\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"pswField\",\n        children: \"password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 48\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"pswField\",\n        id: \"pswField\",\n        onChange: formik.handleChange,\n        value: formik.values.pswField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), formik.errors.pswField ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.pswField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 34\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        id: \"submitBtn\",\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useFormik","App","validate","values","errors","emailField","test","pswField","console","log","formik","initialValues","onSubmit","alert","JSON","stringify","handleSubmit","handleChange"],"sources":["/Users/mrc/build-a-formik-form_starter/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { useFormik } from 'formik'\n// TODO: import useFormik from formik library\n\nconst App = () => {\n  // TODO: add a const called formik assigned to useFormik()\n  const validate = values => {\n    const errors = {}\n\n    if(values.emailField === '') {\n      errors.emailField = \"field required\"\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.emailField)) {\n      errors.emailField = \"username should be an email\"\n    }\n\n\n    if(values.pswField === '') {\n      errors.pswField = \"field required\"\n    }\n    console.log(errors)\n    return errors\n  }\n  \n  const formik = useFormik({\n    initialValues: {\n      emailField: '',\n      pswField: '',\n    },\n    validate,\n  \n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2))\n  }\n  });\n  \n  return (\n    <div>\n\n  <form onSubmit={formik.handleSubmit}>\n  \n    <label htmlFor=\"emailField\">email:</label><br></br>\n      <input type=\"text\" name=\"emailField\" id=\"emailField\" onChange={formik.handleChange} value={formik.values.emailField} />\n      { formik.errors.emailField ? <div>{formik.errors.emailField}</div> : null }\n    \n    <label htmlFor=\"pswField\">password:</label><br></br>\n      <input type=\"text\" name=\"pswField\" id=\"pswField\" onChange={formik.handleChange} value={formik.values.pswField} />\n      { formik.errors.pswField ? <div>{formik.errors.pswField}</div> : null }\n\n  \n      <button type=\"submit\" id=\"submitBtn\">submit</button>\n\n  </form>\n\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,QAAQ;AAClC;AAAA;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB;EACA,MAAMC,QAAQ,GAAGC,MAAM,IAAI;IACzB,MAAMC,MAAM,GAAG,CAAC,CAAC;IAEjB,IAAGD,MAAM,CAACE,UAAU,KAAK,EAAE,EAAE;MAC3BD,MAAM,CAACC,UAAU,GAAG,gBAAgB;IACtC,CAAC,MAAM,IAAI,CAAC,2CAA2C,CAACC,IAAI,CAACH,MAAM,CAACE,UAAU,CAAC,EAAE;MAC/ED,MAAM,CAACC,UAAU,GAAG,6BAA6B;IACnD;IAGA,IAAGF,MAAM,CAACI,QAAQ,KAAK,EAAE,EAAE;MACzBH,MAAM,CAACG,QAAQ,GAAG,gBAAgB;IACpC;IACAC,OAAO,CAACC,GAAG,CAACL,MAAM,CAAC;IACnB,OAAOA,MAAM;EACf,CAAC;EAED,MAAMM,MAAM,GAAGV,SAAS,CAAC;IACvBW,aAAa,EAAE;MACbN,UAAU,EAAE,EAAE;MACdE,QAAQ,EAAE;IACZ,CAAC;IACDL,QAAQ;IAERU,QAAQ,EAAET,MAAM,IAAI;MAClBU,KAAK,CAACC,IAAI,CAACC,SAAS,CAACZ,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IAC1C;EACA,CAAC,CAAC;EAEF,oBACE;IAAA,uBAEF;MAAM,QAAQ,EAAEO,MAAM,CAACM,YAAa;MAAA,wBAElC;QAAO,OAAO,EAAC,YAAY;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAQ;QAAA;QAAA;QAAA;MAAA,QAAS,eACjD;QAAO,IAAI,EAAC,MAAM;QAAC,IAAI,EAAC,YAAY;QAAC,EAAE,EAAC,YAAY;QAAC,QAAQ,EAAEN,MAAM,CAACO,YAAa;QAAC,KAAK,EAAEP,MAAM,CAACP,MAAM,CAACE;MAAW;QAAA;QAAA;QAAA;MAAA,QAAG,EACrHK,MAAM,CAACN,MAAM,CAACC,UAAU,gBAAG;QAAA,UAAMK,MAAM,CAACN,MAAM,CAACC;MAAU;QAAA;QAAA;QAAA;MAAA,QAAO,GAAG,IAAI,eAE3E;QAAO,OAAO,EAAC,UAAU;QAAA,UAAC;MAAS;QAAA;QAAA;QAAA;MAAA,QAAQ;QAAA;QAAA;QAAA;MAAA,QAAS,eAClD;QAAO,IAAI,EAAC,MAAM;QAAC,IAAI,EAAC,UAAU;QAAC,EAAE,EAAC,UAAU;QAAC,QAAQ,EAAEK,MAAM,CAACO,YAAa;QAAC,KAAK,EAAEP,MAAM,CAACP,MAAM,CAACI;MAAS;QAAA;QAAA;QAAA;MAAA,QAAG,EAC/GG,MAAM,CAACN,MAAM,CAACG,QAAQ,gBAAG;QAAA,UAAMG,MAAM,CAACN,MAAM,CAACG;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAO,GAAG,IAAI,eAGrE;QAAQ,IAAI,EAAC,QAAQ;QAAC,EAAE,EAAC,WAAW;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EAEjD;IAAA;IAAA;IAAA;EAAA,QAGC;AAEV,CAAC;AAAA,GApDKN,GAAG;EAAA,QAmBQD,SAAS;AAAA;AAAA,KAnBpBC,GAAG;AAsDT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}